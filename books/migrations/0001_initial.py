# Generated by Django 5.2.5 on 2025-08-17 19:08

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0002_autheruser_revieweruser'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('slug', models.SlugField(max_length=250, unique=True, verbose_name='Slug')),
                ('description', models.TextField(verbose_name='Description')),
                ('content', models.TextField(verbose_name='Content')),
                ('language', models.PositiveSmallIntegerField(choices=[(1, 'English'), (2, 'Spanish'), (3, 'French'), (4, 'German'), (5, 'Italian'), (6, 'Portuguese'), (7, 'Russian'), (8, 'Chinese'), (9, 'Japanese'), (10, 'Arabic')], verbose_name='Language')),
                ('pages', models.PositiveIntegerField(blank=True, null=True, verbose_name='Number of Pages')),
                ('publication_date', models.DateField(verbose_name='Publication Date')),
                ('publisher', models.CharField(blank=True, max_length=200, null=True, verbose_name='Publisher')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='books/covers/', verbose_name='Cover Image')),
                ('file', models.FileField(blank=True, null=True, upload_to='books/files/', verbose_name='Book File')),
                ('is_available', models.BooleanField(default=True, verbose_name='Is Available')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='books', to='accounts.autheruser', verbose_name='Author')),
            ],
            options={
                'verbose_name': 'Book',
                'verbose_name_plural': 'Books',
                'ordering': ('-created_at', '-updated_at'),
            },
        ),
        migrations.CreateModel(
            name='Favorites',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.PositiveSmallIntegerField(choices=[(1, 'Recommended'), (2, 'Reading'), (3, 'Listing'), (4, 'Personal Interest'), (5, 'Purchasing'), (6, 'Gift'), (7, 'Collection'), (0, 'Other')], default=0, verbose_name='Reason for Favoriting')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to='books.book', verbose_name='Book')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Favorite',
                'verbose_name_plural': 'Favorites',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('content', models.TextField(verbose_name='Content')),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Rating')),
                ('is_trusted', models.BooleanField(default=False, verbose_name='Is Trusted')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='books.book', verbose_name='Book')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='accounts.revieweruser', verbose_name='Reviewer')),
            ],
            options={
                'verbose_name': 'Review',
                'verbose_name_plural': 'Reviews',
                'ordering': ('-created_at', '-updated_at'),
            },
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['title'], name='books_book_title_d3218d_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['author'], name='books_book_author__709385_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['publication_date'], name='books_book_publica_4f381a_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['is_available'], name='books_book_is_avai_7b1023_idx'),
        ),
        migrations.AddIndex(
            model_name='favorites',
            index=models.Index(fields=['user'], name='books_favor_user_id_bb6cda_idx'),
        ),
        migrations.AddIndex(
            model_name='favorites',
            index=models.Index(fields=['book'], name='books_favor_book_id_b7e6b6_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='favorites',
            unique_together={('user', 'book')},
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['book'], name='books_revie_book_id_68ab4d_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['reviewer'], name='books_revie_reviewe_fa44dc_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['rating'], name='books_revie_rating_a07249_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='review',
            unique_together={('book', 'reviewer')},
        ),
    ]
